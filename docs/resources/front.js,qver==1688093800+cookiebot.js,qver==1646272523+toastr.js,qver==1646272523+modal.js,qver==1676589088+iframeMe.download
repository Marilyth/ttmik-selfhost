var mod_pagespeed_3r49Y6jjqg = "(function ($) {\n  $.support.cors = true;\n\n  // custom script goes here\n  $(document).ready(function () {\n    if ($('div.ld-focus').length) {\n      if (\n        $('div.ld-lesson-navigation').find(\n          'div.ld-lesson-item.ld-is-current-lesson'\n        ).length\n      ) {\n        var current = $('div.ld-lesson-navigation').find(\n          'div.ld-lesson-item.ld-is-current-lesson'\n        );\n        var current_top = $('div.ld-lesson-navigation')\n          .find('div.ld-lesson-item.ld-is-current-lesson')\n          .position().top;\n        $('div.ld-focus')\n          .find('div.ld-focus-sidebar-wrapper')\n          .scrollTop(current_top);\n      }\n\n      $('.ld-tab').on('click', function () {\n        var premiumTab = $(this).attr('data-tab') !== 'lesson';\n\n        if (premiumTab) {\n          $('.learndash-wrapper').addClass('premium-tab-view-active');\n        } else {\n          $('.learndash-wrapper').removeClass('premium-tab-view-active');\n        }\n      });\n    }\n\n    //stb email subscribe placeholder\n    $('#stb_subscribe').each(function () {\n      $(this)\n        .find('input[type=email]')\n        .attr('placeholder', 'Your email address');\n      $(this).find('button.stb_form_submit_button').html('Subscribe');\n    });\n\n    $('#lnb').each(function () {\n      var headerHeight = $('#header').height() + $('#wpadminbar').height();\n      $(this).css('padding-top', headerHeight);\n\n      $('#lnb a').on('focusin', function () {\n        $(this).parent('#lnb').addClass('view-active');\n      });\n\n      $('#lnb a').on('focusout', function () {\n        $(this).parent('#lnb').removeClass('view-active');\n      });\n    });\n\n    $('.section-courses-container.carousel').fadeIn();\n\n    // Single Product Related Item\n    var options = {\n      cellAlign: 'left',\n      contain: true,\n      wrapAround: true,\n      pageDots: false,\n      prevNextButtons: true,\n      freeScroll: false,\n      autoPlay: 7000,\n    };\n\n    var topLineAdsOptions = {\n      cellAlign: 'center',\n      contain: true,\n      wrapAround: true,\n      pageDots: false,\n      prevNextButtons: false,\n      freeScroll: false,\n      autoPlay: 3000,\n      draggable: true\n    };\n\n    if (matchMedia('screen and (max-width: 1120px)').matches) {\n      options.freeScroll = true;\n      options.prevNextButtons = false;\n    }\n\n    if (typeof $.fn.flickity === 'function') {\n      $('.section-courses-container.carousel > .row').lazyFlickity(options);\n      $('.product-section.related > .row').lazyFlickity(options);\n      $('.row.products-carousel').lazyFlickity(options);\n      $('.custom-slider').lazyFlickity(options);\n      // topline-ads 배너이미지가 2개 이상일 때부터 케러셀을 적용한다.\n      if ($('.topline-ads-carousel.mo .topline-ads-carousel-inner').length > 1) {\n        $('.topline-ads-carousel.mo').lazyFlickity(topLineAdsOptions);\n      }\n    }\n\n    $('.FreshWidget').on('click', function () {\n      FreshworksWidget('open');\n      return false;\n    });\n\n    $('.CookiebotCustomLink').on('click', function () {\n      Cookiebot.renew();\n      return false;\n    });\n\n    $(\".gform_fields input[type='checkbox']\").change(function () {\n      if ($(this).is(':checked')) {\n        $(this).parents('li').addClass('view-active');\n      } else {\n        $(this).parents('li').removeClass('view-active');\n      }\n    });\n\n    $('.launcher-button').on('click', function () {\n      return false;\n    });\n\n    $('.fixed-sidebar-toggler').on('click', function () {\n      $('.fixed-left-sidebar-row').toggleClass('sidebar-view-active');\n    });\n\n    /**\n   * @desc  : header 상단에 topline-ads 닫힘 버튼 눌렀을때 24시간 동안 안보이게 처리\n   * @date   : 221222\n   * @author : leesoyeon\n   */\n\n    $(\".topline-ads-btn-close\").on('click', function () {\n      $('.topline-ads').addClass(\"hidden\");\n      setCookie(\"topline_ads_hidden\", true, 1);\n    });\n\n    if ($(window).width() > 849) {\n      $('.fixed-left-sidebar-row').addClass('sidebar-view-active');\n    }\n\n    $('.searchandfilter input[type=\"checkbox\"]').change(function () {\n      $('.searchandfilter').submit();\n    });\n\n    $('.searchandfilter').each(function () {\n      $('.searchandfilter > ul > li > ul > li > input').remove();\n    });\n\n    $('.ld-icon-premium-membership').each(function () {\n      $(this).parent().addClass('premium-tab');\n    });\n\n    if ($('form.sfwd-mark-incomplete').length) {\n      $('form.sfwd-mark-incomplete').on('submit', function (e) {\n        e.preventDefault();\n        var $form = $(this);\n        $.post(\n          $form.attr('action'),\n          $form.serialize(),\n          function (data) {\n            if (data.status == true) {\n              location.reload();\n            }\n          },\n          'json'\n        );\n      });\n    }\n    if ($('div#ttmik-review-form').length) {\n      $reviewForm = $('#ttmik-review-form');\n      $commentList = $('#comment-list');\n      // data-ttmik-action=\"toggle-comment\"\n      $commentList.on('click', 'a.reply', function (e) {\n        e.preventDefault();\n        var parent = $(this)\n          .parent()\n          .parent()\n          .parent()\n          .parent()\n          .find('div.reply-review');\n\n        if (parent.hasClass('show')) {\n          parent.removeClass('show');\n        } else {\n          parent.addClass('show');\n        }\n      });\n      $commentList.on(\n        'click',\n        '[data-ttmik-action=\"toggle-comment\"]',\n        function () {\n          var $self = $(this);\n          $self.toggleClass('active');\n          $self\n            .parents('.comment')\n            .children('ul.children')\n            .toggleClass('active');\n        }\n      );\n      var onSubmitComment = function (e) {\n        e.preventDefault();\n        var $form = $(this);\n        var $loader = $form.find('div.ttmik-loader');\n        $form.children().not($loader).hide();\n        $form.find('div.ttmik-loader').addClass('active');\n        $.post(\n          $form.attr('action'),\n          $form.serialize(),\n          function (data) {\n            if (data.status == true) {\n              location.reload();\n            }\n          },\n          'json'\n        );\n      };\n      $reviewForm.on('submit', 'form.ttmik-review-form', onSubmitComment);\n      $commentList.on('submit', 'form.ttmik-review-form', onSubmitComment);\n      var commentUnLockInput = function () {\n        var textarea_value = $(this).val();\n\n        if ($('body').hasClass('logged-in')) {\n          if (textarea_value != '') {\n            $(this)\n              .parent()\n              .find('button.submit')\n              .attr('disabled', false)\n              .removeClass('disabled');\n          } else {\n            $(this)\n              .parent()\n              .find('button.submit')\n              .attr('disabled', true)\n              .addClass('disabled');\n          }\n        }\n      };\n      $reviewForm.on(\n        'keyup',\n        'form.ttmik-review-form textarea',\n        commentUnLockInput\n      );\n      $commentList.on(\n        'keyup',\n        'form.ttmik-review-form textarea',\n        commentUnLockInput\n      );\n    }\n\n    jQuery(document.body).on('checkout_error', function () {\n      //jQuery('html, body').stop();\n    });\n\n    $('.wpProQuiz_button_reShowQuestion').on('click', function () {\n      $('.wpProQuiz_AnswerMessage p').each(function () {\n        var target = $(this);\n        if (target.html() == '&nbsp;') {\n          target.css('margin', '0');\n        }\n      });\n    });\n\n    const viewAnswersNodeList = document.querySelectorAll(\n      '.wpProQuiz_questionList_containers p'\n    );\n\n    if (viewAnswersNodeList.length !== 0) {\n      viewAnswersNodeList.forEach((ele) => {\n        ele.prepend('Click to ');\n      });\n    }\n\n    /**\n     * TODO 220518\n     * 1. 공통 action을 제외한 mutation 옵져버에서 element를 찾을 수 없는 에러 픽스 / 폴리필을 추가 (js 정리)\n     * 2. dom에 의존성이 있는게 안 좋은거 같다. / wp-fragment를 이용한다. (js => php)\n     */\n\n    function cartInit() {\n      var value = $('select#calc_shipping_country').val();\n      getDisabledCountries(value);\n      validateZipcodeErrorMessge();\n      // showEUcountriesVatNotice(value);\n    }\n\n    function checkoutInit() {\n      var value = $('select#shipping_country').val();\n      getDisabledCountries(value);\n      showEUcountriesVatNotice(value);\n    }\n\n    // hide error message Please enter a valid postcode / ZIP.\n    function validateZipcodeErrorMessge() {\n      var text = $('.message-container').text();\n\n      if (text && text.match('ZIP')) {\n        $('.message-container').css('display', 'none');\n      } else {\n        $('.message-container').css('display', 'block');\n      }\n    }\n\n    /**\n         * disableCountries - Cart Page\n         *\n         * COVID-19 때문에 배송제한이 생긴 국가가 발생했으며, form.woocommerce-cart-form\n         * data-disabled-countries를 체크하여 standardShipping을 선택못하게 함\n    \n         * @param {string} shippingCountry \n         */\n    function getDisabledCountries(shippingCountry) {\n      var disableCountries = JSON.parse(\n        localStorage.getItem('data-disabled-countries')\n      );\n\n      if (jQuery.inArray(shippingCountry, disableCountries) != '-1') {\n        $('.shipping-methods-standard').show(); //Standard Shipping 불가능한 국가의 경우 안내 문구를 보이게 한다.\n        $('.shipping-over-weight').hide(); //Standard shipping 불가의 경우 무게(5kg) 초과 메시지를 보이지 않게 한다.\n\n        if ($('.shipping__list_item').length >= 2) {\n          var standardShippingInput = $(\n            \"input[id$='standard_shipping_no_tracking_code_available_takes_5_9_weeks']\"\n          );\n\n          if ($(standardShippingInput).is(':checked')) {\n            $(standardShippingInput)\n              .parent()\n              .siblings()\n              .find(\"input[type='radio']\")\n              .prop('checked', 'true');\n          }\n\n          $(standardShippingInput).parent().addClass('disabled');\n          $(standardShippingInput).attr('disabled', 'disabled');\n          $(standardShippingInput)\n            .parent()\n            .find('label')\n            .html(\n              '<p>Standard Shipping</p><span>(no tracking code available) takes 5-9 weeks.</span>'\n            );\n        }\n\n        return true;\n      }\n\n      return false;\n    }\n\n    /**\n     *  vat 관세가 부과되는 EU 국가에만 notice를 출력한다.\n     * @param {string} shippingCountry :배송 받고자 하는 국가 코드\n     */\n    function showEUcountriesVatNotice(shippingCountry) {\n      // $tax_mapping = array(\n      //     \"AT\" => 10, //Austria 10%\n      //     \"BE\" => 6, //Belgium 6%\n      //     \"BG\" => 9,//Bulgaria 9%\n      //     \"CZ\" => 10,//Czech Republic 10%\n      //     \"DK\" => 25,//Denmark 25%\n      //     \"DE\" => 7,//Germany 7%\n      //     \"EE\" => 9,//Estonia 9%\n      //     \"GR\" => 6,//Greece 6%\n      //     \"ES\" => 4,//Spain 4%\n      //     \"FR\" => 20,//France 20%\n      //     \"HR\" => 5,//Croatia 5%\n      //     \"IT\" => 4,//Italy 4%\n      //     \"CY\" => 5,//Cyprus 5%\n      //     \"LV\" => 12,//Latvia 12%\n      //     \"LT\" => 9,//Lithuania 9%\n      //     \"LU\" => 3,//Luxembourg 3%\n      //     \"HU\" => 5,//Hungary 5%\n      //     \"MT\" => 5,//Malta 5%\n      //     \"NL\" => 9,//Netherlands 9%\n      //     \"PL\" => 5,//Poland 5%\n      //     \"PT\" => 6,//Portugal 6%\n      //     \"RO\" => 5,//Romania 5%\n      //     \"SI\" => 5,//Slovenia 5%\n      //     // woo_add_my_country 함수에도 수정시 반영필요\n      //     \"SL-E\" => 5,//Slovenia 5%\n      //     \"SK\" => 10,//Slovakia 10%\n      //     \"FI\" => 10,//Finland 10%\n      //     \"SE\" => 6//Sweden 6%\n      // );\n\n      var taxList = {\n        AT: 10,\n        BE: 6,\n        BG: 9,\n        CZ: 10,\n        DK: 25,\n        DE: 7,\n        EE: 9,\n        GR: 6,\n        ES: 4,\n        FR: 20,\n        HR: 5,\n        IT: 4,\n        CY: 5,\n        LV: 12,\n        LT: 9,\n        LU: 3,\n        HU: 5,\n        MT: 5,\n        NL: 9,\n        PL: 5,\n        PT: 6,\n        RO: 5,\n        SI: 5,\n        'SL-E': 5,\n        SK: 10,\n        FI: 10,\n        SE: 6,\n      };\n      var shippingNoticeDiv = $('#shipping-price-notice');\n\n      if ('TW' === shippingCountry && shippingNoticeDiv) {\n        //Taiwan\n        shippingNoticeDiv.show();\n        shippingNoticeDiv.removeClass('country-eu');\n        shippingNoticeDiv.addClass('country-taiwan');\n        shippingNoticeDiv.html(\n          `<p class=\"shipping-country-notice\">All recipients in Taiwan must complete the <a href=\"https://www.dhl.de/content/dam/images/Express/downloads/dhl-express-taiwan-regulatory-changes-052022.pdf\" target=\"_blank\">'one-time registration via the EZWAY’ and ‘RNA'.</a></p>`\n        );\n      } else if (taxList[shippingCountry] && shippingNoticeDiv) {\n        //EU\n        shippingNoticeDiv.show();\n        shippingNoticeDiv.addClass('country-eu');\n        shippingNoticeDiv.removeClass('country-taiwan');\n        shippingNoticeDiv.html(\n          `<p class=\"shipping-country-notice\"> <span class=\"font-weight-bold\">Important</span><span class=\"detailed-description\">When your order arrives at the customs office in your country, an additional customs fee might be imposed, including <span class=\"font-weight-bold\">a ${taxList[shippingCountry]}% VAT</span>. </span>Please <a href='/additional-fees-paid-on-delivery' target='_blank'>click here</a> to get a general idea of how much the fee will be.</p>`\n        );\n      } else {\n        shippingNoticeDiv.html('');\n        shippingNoticeDiv.hide();\n      }\n    }\n\n    /**\n     * checkout에서 한국을 배송지로 선택한 경우 Korean addresses must be written in Korean. 을 보여준다.\n     * @param {event} self : shipping & billing 하고자 하는 국가 코드\n     */\n    function showKoreanAdressMustBeWritten(self) {\n      if (self.val() === 'KR') {\n        self\n          .parents('.form-row')\n          .append(\n            \"<span class='warning'>Korean addresses must be written in Korean.</span>\"\n          );\n      } else {\n        self.parents('.form-row').find('.warning').empty();\n      }\n    }\n\n    /**\n     * cart MutationObserver\n     * cart 페이지에 어떤 변경이 있을때마다 내부함수를 호출한다.\n     */\n    $('.woocommerce-cart').each(function () {\n      function init() {\n        var checkoutWrapper = $('.woocommerce-notices-wrapper');\n\n        var observer = new MutationObserver(function (mutations) {\n          mutations.forEach(function (mutation) {\n            checkoutWrapper = $('#woocommerce-cart-form');\n\n            if (mutation.type === 'childList') {\n              cartInit();\n            }\n          });\n        });\n\n        observer.observe(checkoutWrapper.get(0), {\n          childList: true,\n        });\n      }\n      init();\n      cartInit();\n    });\n    /**\n     * cart - 장바구니 수량 감소 버튼 클릭할때 최소값 보다 작거나 같은 경우 버튼 클릭 동작을 하지 않게 한다.\n     */\n    $(document).on('mousedown', '.minus.button', function () {\n      let $closestQty = $(this).closest('.quantity');\n      let $qty = $closestQty.find('.qty');\n      let minQty = parseInt($qty.attr('min'));\n      let currentQty = parseInt($qty.val());\n\n      if (currentQty <= minQty) {\n        $(this).attr('disabled', true);\n      }\n    });\n    /**\n     * cart - 장바구니 수량 증가 버튼 클릭할때 수량 감소 버튼을 활성화 한다.\n     */\n    $(document).on('mousedown', '.plus.button', function () {\n      let $closestQty = $(this).closest('.quantity');\n      let $btnMinus = $closestQty.find('.minus');\n\n      $btnMinus.attr('disabled', false);\n    });\n\n    /**\n     * checkout MutationObserver\n     * checkout - 페이지에 어떤 변경이 있을때마다 내부함수를 호출한다.\n     */\n    $('.woocommerce-checkout').each(function () {\n      function init() {\n        var checkoutWrapper = $('#order_review');\n\n        var observer = new MutationObserver(function (mutations) {\n          mutations.forEach(function (mutation) {\n            checkoutWrapper = $('.woocommerce-checkout');\n            if (mutation.type === 'childList') {\n              checkoutInit();\n              disabledAutoUpdateCheckout();\n\n              /** 모바일 전용 상단 상품목록 */\n              if (!$('#order_review').hasClass('processing')) {\n                $('.checkout-header-products tbody').html(\n                  $('.woocommerce-checkout-review-order-table tbody').html()\n                );\n                checkoutHeaderMobileProducts(false);\n              }\n              /** 모바일 전용 상단 상품목록 */\n            }\n          });\n        });\n\n        observer.observe(checkoutWrapper.get(0), {\n          childList: true,\n        });\n      }\n      init();\n      checkoutInit();\n      disabledAutoUpdateCheckout();\n      // ajaxCouponList();\n    });\n\n    /**\n     * checkout 모바일 - 상단의 상품에서 삭제 클릭시 우측의 상품 삭제 클릭으로 동작하게 한다.\n     */\n    $(document).on(\n      'click',\n      '.checkout-header-products .product-remove .remove',\n      function () {\n        let $self = $(this);\n        let className = $self.attr('class').split(' ')[1];\n\n        checkoutHeaderMobileProducts(true);\n        $('#order_review .' + className).trigger('click');\n\n        return false;\n      }\n    );\n\n    /**\n     * checkout 모바일 - 상단의 상품에서 수량변경 클릭시 우측의 상품 수량변경 클릭으로 동작하게 한다.\n     */\n    $(document).on(\n      'click',\n      '.checkout-header-products .product-total .button',\n      function () {\n        let $self = $(this);\n        let $boxQty = $self.closest('.quantity');\n        let $eleQty = $boxQty.find('.qty');\n        let qtyValue = parseInt($eleQty.val());\n        let minValue = parseInt($eleQty.attr('min'));\n        let className = $self.attr('class').split(' ')[3];\n        let isChanged = false;\n\n        if ($self.hasClass('minus') && qtyValue > minValue) {\n          // qtyValue = qtyValue - 1;\n          $eleQty.val(qtyValue);\n          isChanged = true;\n        } else if ($self.hasClass('plus')) {\n          // qtyValue = qtyValue + 1;\n          $eleQty.val(qtyValue);\n          isChanged = true;\n        }\n\n        if (true === isChanged) {\n          setTimeout(function () {\n            checkoutHeaderMobileProducts(true);\n            $('#order_review .' + className).trigger('click');\n          }, 100);\n        }\n\n        return false;\n      }\n    );\n\n    /**\n     * checkout 모바일 - 상단의 상품에서 수량을 직접 입력한 경우에 우측의 상품 수량변경으로 동작하게 한다.\n     */\n    $(document).on(\n      'keyup',\n      '.checkout-header-products .product-total .qty',\n      function () {\n        let $inputSelf = $(this);\n        let $inputQty = $('#order_review #' + $inputSelf.attr('id'));\n\n        checkoutHeaderMobileProducts(true);\n        $inputQty.val($inputSelf.val());\n        $inputQty.trigger('change');\n      }\n    );\n    /**\n     * checkout 모바일 - 상단의 상품 목록 진행중 표시\n     */\n    function checkoutHeaderMobileProducts(processing) {\n      if (false === processing) {\n        $('.wrap-checkout-header').removeClass('processing');\n        $('.wrap-checkout-header .blockUI').removeClass('blockOverlay');\n      } else if (true === processing) {\n        $('.wrap-checkout-header').addClass('processing');\n        $('.wrap-checkout-header .blockUI').addClass('blockOverlay');\n      }\n    }\n    checkoutHeaderMobileProducts(true);\n\n    /**\n     * checkout - 페이지 결제버튼 클릭 할때 이용약관 확인 및 배송,청구주소 입력을 체크한다.\n     */\n    $(document).on('click', '#place_order', function () {\n      let isSubmit = true;\n      let alertMsg = $('.alert-privacy-policy');\n      let $agreeTerms = $('.woocommerce-terms-and-conditions-checkbox-text');\n\n      //배송지 주소 필수 입력 체크\n      $('.shipping_address .validate-required').each(function () {\n        if (false === checkEmptyValue($(this))) {\n          $(this)\n            .closest('.shipping_address')\n            .find('.button-shipping-input')\n            .trigger('click');\n          $(this)\n            .closest('.shipping_address')\n            .find('.update-checkout-address')\n            .trigger('click');\n          isSubmit = false;\n          return false;\n        }\n      });\n\n      //청구지 주소 필수 입력 체크\n      $('.woocommerce-billing-fields .validate-required').each(function () {\n        if (false === checkEmptyValue($(this))) {\n          $(this)\n            .closest('.woocommerce-billing-fields')\n            .find('.button-billing-input')\n            .trigger('click');\n          $(this)\n            .closest('.woocommerce-billing-fields')\n            .find('.update-checkout-address')\n            .trigger('click');\n          isSubmit = false;\n          return false;\n        }\n      });\n\n      if ($('.check-agree-terms').is(':checked')) {\n        alertMsg.hide();\n        $agreeTerms.removeClass('required-checkbox');\n      } else {\n        alertMsg.show();\n        $agreeTerms.addClass('required-checkbox');\n        isSubmit = false;\n      }\n\n      return isSubmit;\n    });\n    /**\n     * checkout - 입력필드(input, select)의 값이 있는지 확인한다.\n     */\n    function checkEmptyValue($filed) {\n      if (\n        $filed.find('input').length &&\n        '' === $.trim($filed.find('input').val())\n      ) {\n        return false;\n      } else if (\n        $filed.find('select').length &&\n        '' === $.trim($filed.find('select').val())\n      ) {\n        return false;\n      }\n\n      return true;\n    }\n\n    /**\n     * checkout - 자주 문의하는 내용에 대한 안내\n     * (드롭다운 버튼 통해 메세지 표시)\n     * 기본적으로 드롭다운 박스는 닫혀 있는 상태,\n     * 문구 또는 드롭다운 화살표 아이콘을 클릭해서 자세한 설명을 펼칠 수 있음\n     * wp-content/themes/ttmik/woocommerce/checkout/form-checkout.php:119\n     */\n    $(document).on('click', '.questions h4', function () {\n      let $selfQ = $(this);\n      let $iconArrow = $selfQ.find('.dashicons');\n      let $description = $selfQ.next('p');\n      let $descriptions = $('.list-frequently-questions .questions .answer');\n\n      // $descriptions.removeClass(\"open\");\n\n      if (false === $description.is(':visible')) {\n        $description.addClass('open');\n        checkoutQuestionSlideDown($selfQ, $iconArrow);\n      } else {\n        $description.removeClass('open');\n        checkoutQuestionSlideUp($selfQ, $iconArrow);\n      }\n\n      $descriptions.each(function () {\n        let $itemQuestion = $(this).closest('li');\n\n        if (!$(this).hasClass('open')) {\n          console.log($(this).text());\n          checkoutQuestionSlideUp(\n            $itemQuestion.find('h4'),\n            $itemQuestion.find('.dashicons')\n          );\n        }\n      });\n    });\n    //checkout - 자주하는 질문의 답변을 보여준다.\n    function checkoutQuestionSlideDown($selfQ, $iconArrow) {\n      $iconArrow.removeClass('dashicons-arrow-down-alt2');\n      $iconArrow.addClass('dashicons-arrow-up-alt2');\n      $selfQ.next('p').slideDown('slow');\n    }\n    //checkout - 자주하는 질문의 답변을 가린다..\n    function checkoutQuestionSlideUp($selfQ, $iconArrow) {\n      $iconArrow.removeClass('dashicons-arrow-up-alt2');\n      $iconArrow.addClass('dashicons-arrow-down-alt2');\n      $selfQ.next('p').slideUp('slow');\n    }\n\n    /**\n     * checkout -  woocommerce-direct-checkout-pro 플러그인에서 동작하는 쿠폰기능을 비활성화 한다.\n     * wp-content/plugins/woocommerce-direct-checkout-pro/assets/frontend/qlwcdc-pro.js\n     */\n    // $(document).find(\"#qlwcdc_order_coupon_code\").bind(\"keyup\", function(e) {\n    $(document).on('keyup', '#qlwcdc_coupon_code', function (e) {\n      e.stopPropagation();\n    });\n\n    /**\n     * checkout - 페이지 쿠폰 버튼(Apply) 클릭\n     */\n    $(document).on('click', '#btn_checkout_order_coupon', function (e) {\n      ajaxCouponCheck($(this).closest('.coupon-processing-box'));\n      return false;\n    });\n\n    /**\n     * checkout - 페이지 쿠폰 버튼(Remove) 클릭\n     */\n    $(document).on('click', '.wc-ttmik-remove-coupon', function (e) {\n      ajaxRemoveCoupon($(this));\n      console.log('WOOCOMMERCE-REMOVE-COUPON');\n      return false;\n    });\n\n    //checkout - Change address 클릭하면 배송지(Shipping)||청구지(Billing) 주소 입력필드가 나타난다.\n    $('.button-shipping-input, .button-billing-input').click(function () {\n      let $selfBox = $(this).closest('.wc-shipping-billing-button-result');\n      let $addressBox = $(this)\n        .closest('.wc-checkout-address-wrap')\n        .find('.wc-ttmik-shipping-billing-inputs');\n\n      disabledAutoUpdateCheckout();\n      // //checkout : 배송지(Shipping) 주소 입력필드 자동 업데이지 방지를 위해 address-field 클래스 삭제\n      // $addressBox.find(\".form-row\").each(function () {\n      //     $(this).removeClass(\"address-field\");\n      //     $(this).removeClass(\"update_totals_on_change\");\n      // });\n\n      $selfBox.slideUp(100, function () {\n        $addressBox.show();\n\n        // checkout - 국가/주 선택 UI에 select2 적용이 되지 않아서 추가함 : 원인 파악 및 해결이 되면 삭제해도 됨\n        wc_country_select_select2();\n      });\n\n      return false;\n    });\n\n    /** checkout - 국가/주 선택 UI에 select2 적용이 되지 않아서 추가함 : 원인 파악 및 해결이 되면 삭제해도 됨 - 시작  */\n    function wc_country_select_select2() {\n      $('select.country_select:visible, select.state_select:visible').each(\n        function () {\n          var $this = $(this);\n\n          var select2_args = $.extend(\n            {\n              placeholder:\n                $this.attr('data-placeholder') ||\n                $this.attr('placeholder') ||\n                '',\n              label: $this.attr('data-label') || null,\n              width: '100%',\n            },\n            getEnhancedSelectFormatString()\n          );\n\n          $(this)\n            .on('select2:select', function () {\n              $(this).trigger('focus'); // Maintain focus after select https://github.com/select2/select2/issues/4384\n            })\n            .selectWoo(select2_args);\n        }\n      );\n    }\n    function getEnhancedSelectFormatString() {\n      return {\n        language: {\n          errorLoading: function () {\n            // Workaround for https://github.com/select2/select2/issues/4355 instead of i18n_ajax_error.\n            return wc_country_select_params.i18n_searching;\n          },\n          inputTooLong: function (args) {\n            var overChars = args.input.length - args.maximum;\n\n            if (1 === overChars) {\n              return wc_country_select_params.i18n_input_too_long_1;\n            }\n\n            return wc_country_select_params.i18n_input_too_long_n.replace(\n              '%qty%',\n              overChars\n            );\n          },\n          inputTooShort: function (args) {\n            var remainingChars = args.minimum - args.input.length;\n\n            if (1 === remainingChars) {\n              return wc_country_select_params.i18n_input_too_short_1;\n            }\n\n            return wc_country_select_params.i18n_input_too_short_n.replace(\n              '%qty%',\n              remainingChars\n            );\n          },\n          loadingMore: function () {\n            return wc_country_select_params.i18n_load_more;\n          },\n          maximumSelected: function (args) {\n            if (args.maximum === 1) {\n              return wc_country_select_params.i18n_selection_too_long_1;\n            }\n\n            return wc_country_select_params.i18n_selection_too_long_n.replace(\n              '%qty%',\n              args.maximum\n            );\n          },\n          noResults: function () {\n            return wc_country_select_params.i18n_no_matches;\n          },\n          searching: function () {\n            return wc_country_select_params.i18n_searching;\n          },\n        },\n      };\n    }\n    /** checkout - 국가/주 선택 UI에 select2 적용이 되지 않아서 추가함 : 원인 파악 및 해결이 되면 삭제해도 됨 - 끝 */\n\n    //checkout - 배송지(Shipping) 주소 입력필드 자동 업데이지 방지를 위해 address-field 클래스 삭제\n    function disabledAutoUpdateCheckout() {\n      $('.wc-ttmik-shipping-billing-inputs')\n        .find('.form-row')\n        .each(function () {\n          $(this).removeClass('address-field');\n          $(this).removeClass('update_totals_on_change');\n        });\n    }\n\n    //checkout - 결제방법 변경하는 경우\n    $(document.body).on(\n      'change',\n      'input[type=radio][name=payment_method]',\n      function () {\n        $('.box_payment_method').removeClass('selected-payment-method');\n\n        if ($(this).val()) {\n          $(this)\n            .closest('.box_payment_method')\n            .addClass('selected-payment-method');\n\n          // paymentwall 결제 옵션을 선택한 경우\n          if ($(this).val().indexOf('paymentwall') > -1) {\n            $('.payment_box_paymentwall').show();\n          } else {\n            $('.payment_box_paymentwall').hide();\n          }\n        }\n      }\n    );\n\n    //checkout - 결제방법중 paymentwall-method 클릭한 경우 paymentwall의 첫번째 결제방법을 자동 선택한다.\n    $(document.body).on('click', '.paymentwall-method label', function () {\n      $('.pw_payment_system').each(function () {\n        $(this).trigger('click');\n        return false;\n      });\n      // $(this).next(\"input[type=radio][name=payment_method]\").prop(\"checked\", true);\n    });\n\n    //checkout - 배송지(Shipping)||청구지(Billing) 주소 저장하기 버튼 클릭\n    $('.update-checkout-address').click(function () {\n      let isCheckOnce = false;\n      let $addressWrap = $(this).closest('.wc-checkout-address-wrap');\n      let $addressInputs = $addressWrap.find(\n        '.wc-ttmik-shipping-billing-inputs'\n      );\n      let $addressResult = $addressWrap.find(\n        '.wc-shipping-billing-button-result'\n      );\n\n      if (true === confirmRequiredFields($addressInputs)) {\n        return false;\n      }\n\n      if ($(document.body).find('.blockOverlay').length) {\n        console.log('Updating check-out page.');\n        return false;\n      }\n\n      //배송지(Shipping)||청구지(Billing) 주소 필드 수정할 수 없게 한다.\n      $addressInputs.addClass('processing').block({\n        message: null,\n        overlayCSS: {\n          background: '#fff',\n          opacity: 0.6,\n        },\n      });\n\n      //update checkout\n      $(document.body).trigger('update_checkout');\n\n      //실행중 아이콘 사라질때\n      $(document.body).on('DOMNodeRemoved', '.blockOverlay', function () {\n        if (false === isCheckOnce) {\n          isCheckOnce = true;\n\n          $addressInputs.removeClass('processing').unblock();\n          $addressInputs.slideUp(100, function () {\n            $addressResult.show();\n            ajaxCheckoutShippingBilling($addressResult);\n          });\n        }\n      });\n\n      return false;\n    });\n\n    //Cart - CHECKOUT 버튼 클릭(Form Submit) 할 때 비로그인의 경우 로그인 페이지로 이동한다.\n    $('.checkout-form').submit(function () {\n      let loginUrl = $(this).find('input[name=user_login_url]').val();\n\n      if (!$(this).find('input[name=user_logged_in]').val()) {\n        window.location.href = loginUrl;\n        return false;\n      }\n    });\n\n    //checkout - Change address 클릭하면 배송지(Shipping)||청구지(Billing) 주소 필수 입력 확인하기\n    function confirmRequiredFields($addressBox) {\n      $isRequired = false;\n\n      //배송지(Shipping)||청구지(Billing) 주소 필수 입력 검색\n      $addressBox.find('.validate-required').each(function () {\n        $(this).find('.alert-required').remove();\n        $(this).find('input').removeClass('input-alert-required');\n        $(this).find('select').removeClass('input-alert-required');\n\n        if (\n          !$.trim($(this).find('input').val()) &&\n          !$.trim($(this).find('select').val())\n        ) {\n          $isRequired = true;\n          $(this).append(\n            '<span class=\"alert-required\">This field is required.</span>'\n          );\n          $(this).find('input').addClass('input-alert-required');\n          $(this).find('select').addClass('input-alert-required');\n        }\n      });\n\n      return $isRequired;\n    }\n\n    /**\n     * checkout - 배송지||청구지 주소, 버튼 텍스트를 가져온다.\n     */\n    function ajaxCheckoutShippingBilling($resultBox) {\n      let $button = $resultBox.find('button'), //enter, change button\n        $address = $resultBox.find('span'), //청구지, 배송지 주소 TEXT\n        data = {\n          action: 'ttmik_checkout_address',\n          nonce: $resultBox.find('.nonce_ttmik_shipping_billing').val(),\n          field_set: $resultBox.find('.type_ttmik_shipping_billing').val(),\n        };\n      $resultBox.addClass('processing');\n\n      $address.html('');\n\n      $.ajax({\n        type: 'POST',\n        url: wc_checkout_params.ajax_url,\n        dataType: 'json',\n        data: data,\n        success: function (response) {\n          if (response.address && response.button) {\n            $button.text(response.button);\n            $address.html(response.address.replace(/\\n/g, '<br />'));\n          }\n        },\n        complete: function () {\n          $resultBox.removeClass('processing');\n        },\n        error: function () {\n          console.log('CHECKOUT SHIPPING BILLING ERROR');\n        },\n      });\n      return false;\n    }\n\n    /**\n     * checkout - 페이지 아작스로 쿠폰 사용을 체크한다.\n     * 사용가능한 쿠폰인 경우 쿠폰 목록을 가져온다.\n     */\n    function ajaxCouponCheck($couponForm) {\n      let $coupon = $couponForm.find('input[name=coupon_code]'),\n        $couponBox = $couponForm.find('.coupon-input-box'),\n        $couponMsg = $couponForm.find('.coupon-result-message'),\n        coupon_code = $coupon.val();\n\n      if (!coupon_code) {\n        return;\n      }\n\n      if ($couponForm.is('.processing')) {\n        return false;\n      }\n\n      $couponForm.addClass('processing').block({\n        message: null,\n        overlayCSS: {\n          background: '#fff',\n          opacity: 0.6,\n        },\n      });\n\n      let data = {\n        security: wc_checkout_params.apply_coupon_nonce,\n        coupon_code: coupon_code,\n      };\n\n      $couponMsg.html('');\n      $couponBox.removeClass('coupon-error');\n\n      $.ajax({\n        type: 'POST',\n        url: wc_checkout_params.wc_ajax_url\n          .toString()\n          .replace('%%endpoint%%', 'apply_coupon'),\n        data: data,\n        success: function (code) {\n          if (code) {\n            if (code.indexOf('woocommerce-error') !== -1) {\n              $couponBox.addClass('coupon-error');\n            } else {\n              $(document.body).trigger('removed_coupon_in_checkout', [\n                data.coupon,\n              ]);\n              $(document.body).trigger('update_checkout', {\n                update_shipping_method: false,\n              });\n            }\n\n            $couponMsg.html($(code).hide().fadeIn());\n          }\n        },\n        complete: function () {\n          $couponForm.removeClass('processing').unblock();\n        },\n        error: function () {\n          console.log('ERROR');\n          $couponMsg.html(\n            '<ul class=\"woocommerce-error message-wrapper\" style=\"\"><li><div class=\"message-container alert-color\">System Error.</div></li></ul>'\n          );\n        },\n        dataType: 'html',\n      });\n      return false;\n    }\n\n    /**\n     * checkout - 페이지 아작스로 적용된 쿠폰을 삭제한다.\n     */\n    function ajaxRemoveCoupon($btnRemove) {\n      let coupon = $btnRemove.attr('data-coupon');\n      let $couponBox = $btnRemove.closest('.coupon-table');\n\n      console.log('REMOVE COUPON');\n\n      let data = {\n        security: wc_checkout_params.remove_coupon_nonce,\n        coupon: coupon,\n      };\n\n      $couponBox.addClass('processing');\n\n      $.ajax({\n        type: 'POST',\n        url: wc_checkout_params.wc_ajax_url\n          .toString()\n          .replace('%%endpoint%%', 'remove_coupon'),\n        data: data,\n        success: function (code) {\n          $('.woocommerce-error, .woocommerce-message').remove();\n\n          if (code) {\n            $('form.woocommerce-checkout').before(code);\n\n            $(document.body).trigger('removed_coupon_in_checkout', [\n              data.coupon,\n            ]);\n            $(document.body).trigger('update_checkout', {\n              update_shipping_method: false,\n            });\n\n            // Remove coupon code from coupon field\n            $('form.checkout_coupon').find('input[name=\"coupon_code\"]').val('');\n          }\n        },\n        complete: function () {\n          $couponBox.removeClass('processing');\n        },\n        dataType: 'html',\n      });\n    }\n\n    /*장바구니/체크아웃/주문완료 페이지 breadcrumbs 내 a 태그 비활성화 */\n    $('.checkout-breadcrumbs a').click(function () {\n      return false;\n    });\n\n    $('select#shipping_country').change(function () {\n      var value = $(this).val();\n\n      showKoreanAdressMustBeWritten($(this));\n      showEUcountriesVatNotice(value);\n    });\n\n    $('select#billing_country').on('change', function () {\n      showKoreanAdressMustBeWritten($(this));\n    });\n\n    $('#billing_first_name_field #billing_first_name').inputFilter(function (\n      value\n    ) {\n      return /^[a-zA-Zㄱ-ㅎㅏ-ㅣ가-힣0-9\\s\\-\\.\\,]*$/i.test(value);\n    });\n\n    $('#billing_last_name_field #billing_last_name').inputFilter(function (\n      value\n    ) {\n      return /^[a-zA-Zㄱ-ㅎㅏ-ㅣ가-힣0-9\\s\\-\\.\\,]*$/i.test(value);\n    });\n\n    $('.address-field #billing_postcode').inputFilter(function (value) {\n      return /^[a-zA-Zㄱ-ㅎㅏ-ㅣ가-힣0-9\\s\\-\\.\\,]*$/i.test(value);\n    });\n\n    $('.address-field #billing_city').inputFilter(function (value) {\n      return /^[a-zA-Zㄱ-ㅎㅏ-ㅣ가-힣0-9\\s\\-\\.\\,]*$/i.test(value);\n    });\n\n    $('.address-field #billing_address_1').inputFilter(function (value) {\n      return /^[a-zA-Zㄱ-ㅎㅏ-ㅣ가-힣0-9\\s\\-\\.\\,]*$/i.test(value);\n    });\n\n    $('.address-field #billing_address_2').inputFilter(function (value) {\n      return /^[a-zA-Zㄱ-ㅎㅏ-ㅣ가-힣0-9\\s\\-\\.\\,]*$/i.test(value);\n    });\n\n    $('.address-field #shipping_postcode').inputFilter(function (value) {\n      return /^[a-zA-Zㄱ-ㅎㅏ-ㅣ가-힣0-9\\s\\-\\.\\,]*$/i.test(value);\n    });\n\n    $('.address-field #shipping_city').inputFilter(function (value) {\n      return /^[a-zA-Zㄱ-ㅎㅏ-ㅣ가-힣0-9\\s\\-\\.\\,]*$/i.test(value);\n    });\n\n    $('.address-field #shipping_address_1').inputFilter(function (value) {\n      return /^[a-zA-Zㄱ-ㅎㅏ-ㅣ가-힣0-9\\s\\-\\.\\,]*$/i.test(value);\n    });\n\n    $('.address-field #shipping_address_2').inputFilter(function (value) {\n      return /^[a-zA-Zㄱ-ㅎㅏ-ㅣ가-힣0-9\\s\\-\\.\\,]*$/i.test(value);\n    });\n\n    // ttmik-sidebar가 3초뒤에 사라지도록 설정.\n    if (!isMobile()) {\n      $('.ttmik-sidebar').addClass('active');\n      setTimeout(function () {\n        $('.ttmik-sidebar').removeClass('active');\n      }, 3000);\n    }\n\n    /* 2022-11-7\n        / 코스 숨김 버튼 활성화 관련 로직 시작\n        / clickup : https://app.clickup.com/t/345cefn\n        */\n    if ($('.ld-item-list').length > 0) {\n      const premiumCourses = 'Premium Courses';\n      const hiddenCourses = 'Hidden Courses';\n\n      // 프리미엄과 히든 코스가 없을 경우 알림 메시지를 보여줄 수 있도록 합니다\n      const numberOfHiddenCourses = $(\n        '.ld-item-list-items'\n      ).eq(1).find('.ld-item-list-container.is-hidden').length;\n      const numberOfPremiumCourses = $(\n        '.ld-item-list-items'\n      ).eq(1).find('.ld-item-list-container').length;\n      var $courseList = $('.ld-item-list.ld-course-list').eq(1)\n      if ($courseList) {\n        if (numberOfHiddenCourses === numberOfPremiumCourses) {\n          $courseList.addClass(\n            'have-not-premium-course'\n          );\n        } else if (numberOfHiddenCourses === 0) {\n          $courseList.addClass(\n            'have-not-hidden-course'\n          );\n        }\n      }\n\n      const changeViewFunc = (pointerEvent) => {\n        const $activeButton = $('.view-active').eq(0);\n        const $inActiveButton = $('.view-inactive').eq(0);\n\n        const clickedValue = $(pointerEvent.target).data('value');\n\n        if (clickedValue === $activeButton.data('value')) {\n          return;\n        }\n        else if (clickedValue === $inActiveButton.data('value')) {\n          $activeButton.removeClass('view-active');\n          $activeButton.addClass('view-inactive');\n          $inActiveButton.removeClass('view-inactive');\n          $inActiveButton.addClass('view-active');\n\n          var $courseList = $('.ld-item-list.ld-course-list').eq(1)\n          // 클래스가 바뀌면 상단 container에 hide 클래스를 추가, 혹은 제거해줍니다\n          $courseList.toggleClass(\n            'hidden-course-view'\n          );\n        }\n      };\n\n      // view-button 내부 모달에 이벤트를 넣어줍니다.\n      $('.view-button').on(\n        'click',\n        '.premium-courses-view-selector',\n        changeViewFunc\n      );\n      $('.view-button').on(\n        'click',\n        '.hidden-courses-view-selector',\n        changeViewFunc\n      );\n\n      $('.view-button').click(function () {\n        // 랩탑일 경우의 클릭 로직입니다\n        if ($(window).width() > 1024) {\n          // 먼저, view-active 와 inactive를 전환합니다.\n          $('.view-active').removeClass('view-active').addClass('view-inactive');\n          $(this).removeClass('view-inactive').addClass('view-active');\n          // 클래스가 바뀌면 상단 container에 hide 클래스를 추가, 혹은 제거해줍니다 (토글 시 오류 발생으로 수정함)\n          $hiddenClassValue = jQuery('.view-active').eq(0).data('value');\n          if ($hiddenClassValue === hiddenCourses) {\n            // hiddenCourses가 활성화 되었을 때\n            $('.ld-item-list.ld-course-list').eq(1).addClass(\n              'hidden-course-view'\n            );\n          } else if ($hiddenClassValue === premiumCourses) {\n            // premiumCourses가 활성화 되었을 때\n            $('.ld-item-list.ld-course-list').eq(1).removeClass(\n              'hidden-course-view'\n            );\n          }\n        }\n        // 모바일일 경우의 클릭 로직입니다\n        else {\n          // 모달이 있는지 확인하고 없으면 생성합니다.\n          if ($(this).children('.modal-background').length) {\n            $(this).children('.modal-background').remove();\n          } else {\n            $(this).append(`\n                      <div class=\"modal-background\">\n                          <div class=\"drop-down-for-edit-container\">\n                              <div class=\"premium-courses-view-selector\" data-value=\"Premium Courses\">${premiumCourses}</div>\n                              <div class=\"hidden-courses-view-selector\" data-value=\"Hidden Courses\">${hiddenCourses}</div>\n                          </div>\n                      </div>\n                      `);\n          }\n        }\n      });\n\n      // 코스 에디트 버튼의 이벤트입니다. (jQuery.ajax 통신)\n      $('.edit-course-view-button').click(function () {\n        // 코스 수정이 완료된 경우 통신 로직\n        if ($(this).hasClass('active')) {\n          $(this).text('Edit List');\n\n          // 전역에서 숨김 코스 변수들을 가져옵니다.\n          let hiddenCoursesInDB = usermeta.hiddenCoursesInDB[0];\n          const hiddenCheckedCourses = usermeta.hiddenCheckedCourses;\n\n          // 하나라도 클릭한 코스가 있으면 로직이 작동합니다\n          if (hiddenCheckedCourses.length !== 0) {\n            // array가 아닐 경우 빈 array로 만들어줍니다\n            if (!Array.isArray(hiddenCoursesInDB)) {\n              hiddenCoursesInDB = [];\n            }\n            let hiddenCoursesForRequest = hiddenCoursesInDB;\n\n            // DB의 usermeta 요소와 선택한 요소를 비교합니다 (이미 있는 요소 = hidden에서 삭제, 없는 요소 = hidden에 추가)\n            hiddenCheckedCourses.every((element) => {\n              switch (hiddenCoursesForRequest.includes(element)) {\n                case true:\n                  return (hiddenCoursesForRequest =\n                    hiddenCoursesForRequest.filter(\n                      (course) => course !== element\n                    ));\n                case false:\n                  return hiddenCoursesForRequest.push(element);\n              }\n            });\n\n            var $xhr = jQuery\n              .ajax({\n                type: 'POST',\n                url: usermeta.ajaxurl,\n                data: {\n                  action: 'set_learningcenter_hidden_course',\n                  hiddenCourse: hiddenCoursesForRequest,\n                },\n                dataType: 'json',\n              })\n              .then(function (response) {\n                // 통신이 이루어졌을 때 성사여부에 따라 메시지가 다른 팝업을 생성해줍니다.\n                $('.edit-course-view-button').after(`\n                  <div class=\"popup-container\">\n                      <div class=\"popup-content\">\n                          <div class=\"popup-title font-dmsans-700\">${response.status == 'success' ? 'Done!' : 'Oops!'}\n                      </div>\n                      <div class=\"popup-button-container\">\n                          <div class=\"popup-button\"></div>\n                      </div>\n                      <div class=\"popup-message \">${response.status == 'success' ? 'List successfully updated.' : 'Something went wrong. Please try again.'}</div>\n                      </div>\n                  </div>\n              `);\n\n                // user_meta에 반영된 hidden course를 보여주기 위해 재로딩합니다.\n                $('.popup-button').click(function () {\n                  $('.popup-container').remove();\n                  location.reload();\n                });\n                setTimeout(function () {\n                  $('.popup-container').remove();\n                  location.reload();\n                }, 5000);\n              });\n          }\n        } else {\n          $(this).text('Save the current state');\n        }\n\n        // 코스 수정 버튼의 활성화/비활성화를 토글합니다.\n        $(this).toggleClass('active');\n        // 스타일 변화를 위해 프리미엄 코스 블럭에 활성화 클래스를 추가합니다.\n        $('.ld-item-list.ld-course-list').eq(1).toggleClass('active');\n      });\n\n      // 코스 상태(숨길지, 안 숨길지) 선택 버튼의 이벤트입니다\n      $('.course-view-toggle-button').click(function () {\n        const courseID = $(this).attr('id');\n        if (usermeta.hiddenCheckedCourses.includes(courseID)) {\n          // 만약 요소가 이미 있으면 제거합니다 (클릭했다가 다시 클릭해서 취소한 경우 오류 발생으로 추가)\n          usermeta.hiddenCheckedCourses.splice(\n            usermeta.hiddenCheckedCourses.indexOf(courseID),\n            1\n          );\n        } else {\n          usermeta.hiddenCheckedCourses.push(courseID);\n        }\n        $(this).toggleClass('active');\n      });\n    }\n  });\n\n  /* 2022-11-7\n    / 코스 숨김 버튼 활성화 관련 로직 끝\n    */\n\n  jQuery.fn.inputFilter = function (inputFilter) {\n    var self = this;\n\n    return this.on(\n      'input keydown mousedown mouseup select contextmenu drop',\n      function () {\n        if (inputFilter(this.value)) {\n          this.oldValue = this.value;\n          this.oldSelectionStart = this.selectionStart;\n          this.oldSelectionEnd = this.selectionEnd;\n\n          self.parents('.address-field').find('.warning').remove();\n        } else if (this.hasOwnProperty('oldValue')) {\n          this.value = this.oldValue;\n          this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);\n\n          if (!self.parent().find('.warning').length) {\n            self\n              .parent()\n              .append(\n                \"<span class='warning' style='display:block;color:#f44339;font-size:.86em'>Enter only Korean or alphabetic characters, numbers, and hyphens.</span>\"\n              );\n          }\n        } else {\n          this.value = '';\n        }\n      }\n    );\n  };\n\n\n\n})(jQuery);\n";
var mod_pagespeed_FdAZmwIvBW = "jQuery(document).ready(function(){window.addEventListener(\"CookiebotOnConsentReady\",function(){var c=Cookiebot,d=document,cookies=d.cookie.split(\";\"),consentCookie=\"\",consentDate=c.consentUTC,consentExpiry=new Date(consentDate.setMonth(consentDate.getMonth()+12)),now=new Date();for(var i=0;i<cookies.length;i++)if(/^CookieConsent/g.test(cookies[i]))consentCookie=cookies[i];if(consentCookie!==\"\"&&now<consentExpiry)d.cookie=consentCookie+\";expires=\"+consentExpiry.toUTCString();});});";
var mod_pagespeed_2j59rcKKpc = "\nfunction showToastr(config) {\n    (function ($) {\n        if(config){\n\n            // type\n            if(config.type === 'error'){\n                config.color = '#FF6633';\n            }else if(config.type === 'info'){\n                config.color='#3C579E';\n            }else{\n                config.color='#3C579E';\n            }\n\n            const toastrTemplate = `\n        <div class=\"ttmik-toastr\" style=\"border-left :10px solid ${config.color}\">\n          <div class=\"ttmik-toastr-body\">\n            <div class=\"ttmik-toastr-top\">\n              <button type=\"button\" class=\"ttmik-toastr-remove\" onclick=\"removeToastr();\">x</button>\n              <p class=\"ttmik-toastr-title\" style=\"color : ${config.color}; margin-left : ${config.type === 'error' ? '20px' : '0'}\">\n              ${config.type === 'error' ?  '<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.5 20C16.6421 20 20 16.6421 20 12.5C20 8.35786 16.6421 5 12.5 5C8.35786 5 5 8.35786 5 12.5C5 16.6421 8.35786 20 12.5 20ZM11.6165 14.767H13.3763L13.6256 7.36843H11.3672L11.6165 14.767ZM13.3543 16.2408C13.1392 16.0306 12.8532 15.9255 12.4964 15.9255C12.1444 15.9255 11.8584 16.0331 11.6385 16.2482C11.4234 16.4584 11.3158 16.7248 11.3158 17.0474C11.3158 17.3701 11.4234 17.6365 11.6385 17.8467C11.8584 18.0569 12.1444 18.162 12.4964 18.162C12.8532 18.162 13.1392 18.0569 13.3543 17.8467C13.5743 17.6365 13.6843 17.3701 13.6843 17.0474C13.6843 16.7199 13.5743 16.451 13.3543 16.2408Z\" fill=\"#FF6633\"/></svg>' : '<span></span>'}\n              ${config.title}</p>\n            </div>\n            <div class=\"ttmik-toastr-bottom\" style=\"display :${config.link? 'flex' : 'none'}\">\n              <a href=\"${config.link}\" class=\"btn yes\">Go To</a>\n           </div>\n       </div>\n      `;\n\n            // append\n            $(\"#main\").append(toastrTemplate);\n\n            // duration\n            if(config.duration){\n                setTimeout(()=>{\n                    $('.ttmik-toastr').remove();\n                },config.duration);\n            }\n        }\n    })(jQuery);\n}\n\n\nfunction removeToastr(){\n    (function ($) {\n        $('.ttmik-toastr').remove();\n    })(jQuery);\n}";
var mod_pagespeed_ZbmoCil14J = "\n/**\n * cart에서 membership과 books 동시 구매 시 checkout 하려고 할 때 뜨는 modal\n */\n function showMembershipDeleteModal() {\n  (function ($) {\n      var template = `\n      <div class=\"ttmik-modal\">\n        <div class=\"ttmik-modal-bg\"></div>\n        <div class=\"ttmik-modal-dialog\">\n          <form method=\"post\" class=\"form ttmik-modal-form\">\n            <div class=\"ttmik-modal-content\">\n              <div class=\"ttmik-modal-body\">\n                <div class=\"ttmik-modal-title\">\n                  <svg\n                    width=\"26\"\n                    height=\"26\"\n                    viewBox=\"0 0 26 26\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      fill-rule=\"evenodd\"\n                      clip-rule=\"evenodd\"\n                      d=\"M12.5 20C16.6421 20 20 16.6421 20 12.5C20 8.35786 16.6421 5 12.5 5C8.35786 5 5 8.35786 5 12.5C5 16.6421 8.35786 20 12.5 20ZM11.6165 14.767H13.3763L13.6256 7.36843H11.3672L11.6165 14.767ZM13.3543 16.2408C13.1392 16.0306 12.8532 15.9255 12.4964 15.9255C12.1444 15.9255 11.8584 16.0331 11.6385 16.2482C11.4234 16.4584 11.3158 16.7248 11.3158 17.0474C11.3158 17.3701 11.4234 17.6365 11.6385 17.8467C11.8584 18.0569 12.1444 18.162 12.4964 18.162C12.8532 18.162 13.1392 18.0569 13.3543 17.8467C13.5743 17.6365 13.6843 17.3701 13.6843 17.0474C13.6843 16.7199 13.5743 16.451 13.3543 16.2408Z\"\n                      fill=\"#030D51\"\n                    ></path>\n                  </svg>\n  \n                  <p style=\"margin-top: 10px; margin-left:20px;font-weight: 600\">\n                    Your book order will be processed first to ensure a smooth customs clearance process.\n                  </p>\n                </div>\n              </div>\n              <div class=\"ttmik-modal-footer\">\n                <button\n                  type=\"submit\"\n                  name=\"deletePremiumProduct\"\n                  id=\"deletePremiumProduct\"\n                  class=\"btn yes\"\n                >\n                  Got it!\n                </button>\n                <button\n                  type=\"button\"\n                  name=\"removeCartConfirmModal\"\n                  id=\"removeCartConfirmModal\"\n                  class=\"btn cancel\"\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n      `\n\n      // append\n      $('html,body').css('overflow','hidden');\n      $(\"body\").append(template);\n\n      // cancel\n      $('#removeCartConfirmModal').click(function(){\n          $('.ttmik-modal').remove();\n          $('html').css('overflow','');\n\n          showToastr({\n              type: 'error',\n              title  : 'Books and subscriptions can only be purchased in separate orders.',\n          });\n      });\n\n  })(jQuery);\n}\n\n/**\n *  중복 결제 alert 팝업\n *  premium 유저일때 membership을 담으려고 할 때 뜨는 modal\n *  redirect /curriculum\n *  https://www.figma.com/file/9mdbPeOPhXrOmXi0vZ2CmC/%EC%A4%91%EB%B3%B5%EA%B2%B0%EC%A0%9C-alert-%ED%8C%9D%EC%97%85?node-id=3%3A88\n */\nfunction showRedirectCurriculumnPageModal() {\n (function ($) {\n     // append\n      // show modal\n     $('html,body').css('overflow','hidden');\n     if($('#curriculumnRedirectModal' )) {\n        $('#curriculumnRedirectModal').show();\n     }\n\n    var redirectTimeoutID = setTimeout(function(){ window.location=\"/curriculum\"; },3000);\n\n    // hide modal\n    $('#cancelRedirect').click(function(){\n      $('#curriculumnRedirectModal').hide();\n      $('html').css('overflow','');\n      clearTimeout(redirectTimeoutID);\n    });\n\n })(jQuery);\n}\n\n";
var mod_pagespeed_m_y8VgFQZO = "(function(){var isSubDomain=function(domain){return domain.split(\".\").slice(1).join(\".\")===window.location.host;};window.addEventListener(\"message\",function(e){var data=e.data;if(isSubDomain(e.origin)||window.location.origin===e.origin){switch(data.type){case\"redirect\":if(data.payload.href){location.href=data.payload.href;}break;}}});})();";
var mod_pagespeed_IqZwpMY3Lo = "// roadmap microfrontend \nwindow.addEventListener(\"load\",() => {\n  var roadmapDom = document.querySelector(\"[data-ttmik-extension='roadmap-frame']\");\n  var roadmapBookDom = document.querySelector(\"[data-ttmik-extension='roadmap-book-frame']\");\n  var roadmapCourseDom = document.querySelector(\"[data-ttmik-extension='roadmap-course-frame']\");\n\n  // roadmap (sitemap)\n  if(roadmapDom instanceof HTMLElement) {\n      renderPage.RoadmapEntry(roadmapDom);\n  }\n\n  // bookstore map\n  if(roadmapBookDom instanceof HTMLElement) {\n      renderPage.RoadmapBook(roadmapBookDom);\n  }\n\n  // coursemap\n  if(roadmapCourseDom instanceof HTMLElement) {\n      renderPage.RoadmapCourse(roadmapCourseDom);\n  }\n})";
var mod_pagespeed_33gwYBgtRh = "var getWindowSize=function(){return jQuery(window).width();};var getWindowMode=function(){return getWindowSize()>=850?\"pc\":\"mobile\";};var isDevelopment=function(){return window.location.host!==\"talktomeinkorean.com\";}\nvar getDomain=function(){return window.location.host===\"talktomeinkorean.com\"?\"talktomeinkorean.com\":\"talktomeinkorean.kr\";}\nvar getOrigin=function(){return window.location.protocol+\"//\"+getDomain()}\nvar getNotificationUrl=function(extra=\"\"){return(window.location.protocol+\"//notification.\"+getDomain()+extra);};var isSubDomain=function(domain){return domain.split(\".\").slice(1).join(\".\")===getDomain();};var CONSTANT={NAVIGATION_KEY:\"navigation-type\",};var initMode=getWindowMode();var nextFrameCallback=function(cb){if('requestAnimationFrame'in window){window.requestAnimationFrame(cb);}else{setTimeout(cb,0);}}\njQuery(document).ready(function(){var getCookie=function(name){let matches=document.cookie.match(new RegExp(\"(?:^|; )\"+name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g,\"\\\\$1\")+\"=([^;]*)\"));return matches?decodeURIComponent(matches[1]):\"\";}\nvar $frame=jQuery('<section data-ttmik-extension=\"notification-frame\"></section>');$frame.attr(\"data-\"+CONSTANT.NAVIGATION_KEY,initMode);var $notiIcon=jQuery('[data-ttmik-extension=\"notification\"]');var $notiCount=jQuery('[data-ttmik-extension=\"notification-count\"]');var toggleFrame=function(){$frame.addClass(\"animatable\");$frame.toggleClass(\"active\");};var dispatchFrameTheme=function(type){window.postMessage({type:\"theme\",payload:{mode:type,},},getOrigin());};var batchFrame=function(type,$self){$frame.attr(\"data-\"+CONSTANT.NAVIGATION_KEY,type);if(type===\"pc\"){var offset=$self.offset();$frame.css({top:offset.top+$self.height(),left:offset.left-$frame.width()+$self.width(),});}else{$frame.css({top:0,left:0,});}};var lazyEvent=function(fn){return function(e){var scope=this;nextFrameCallback(function(){fn.call(scope,e);});};};var autoResizeFrame=function(){var mode=getWindowMode();var $selectedNode=$notiIcon.filter(\"[data-\"+CONSTANT.NAVIGATION_KEY+\"=\"+mode+\"]\");var $node=$selectedNode.length>0?$selectedNode:$notiIcon;batchFrame(mode,$node);dispatchFrameTheme(mode);};nextFrameCallback(function(){renderPage.Notification($frame.get(0)).then(function(){jQuery(document.body).prepend($frame);});})\n$notiIcon.on(\"click\",function(e){e.preventDefault();autoResizeFrame();toggleFrame();});$frame.on(\"transitionend\",function(e){$frame.removeClass(\"animatable\");});jQuery(window).on(\"resize scroll\",lazyEvent(function(e){autoResizeFrame();}));window.addEventListener(\"message\",function(e){var data=e.data;if(isSubDomain(e.origin)||e.origin===getOrigin()){switch(data.type){case\"info\":if(data.payload.href){location.href=data.payload.href;}break;case\"close\":toggleFrame();break;case\"sync\":var count=data.payload.count;var isLarge=count>9;var $badge=$notiIcon.find(\".badge\");$notiCount.text(isLarge?\"9+\":count);$badge.css({display:count>0?\"block\":\"none\",});break;}}});});";
var mod_pagespeed_rw6_nayCzk = "var $window=jQuery(window);var $document=jQuery(document);var isMobile=function(){return $window.width()<640;}\n$document.ready(function(){$document.on(\"click\",\".ld-user-menu\",function(){if(isMobile()){jQuery(this).toggleClass(\"active\");}});});var hocFilterLoader=function hocFilterLoader($dom){return function(isLoading){if($dom.length<=0){return;}$dom[isLoading?\"addClass\":\"removeClass\"](\"active\");}}\nfunction setCookie(key,value,expiredays){var todayDate=new Date();todayDate.setDate(todayDate.getDate()+expiredays);document.cookie=key+\"=\"+escape(value)+\"; path=/; expires=\"+todayDate.toGMTString()+\";\";}";
